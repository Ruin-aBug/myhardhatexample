/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GlodToken, GlodTokenInterface } from "../GlodToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "manaAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MANA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mana",
        type: "address",
      },
    ],
    name: "setMANA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200163138038062001631833981016040819052620000349162000277565b6040518060400160405280600981526020016823b637b22a37b5b2b760b91b8152506040518060400160405280600381526020016211d11560ea1b81525081600390805190602001906200008a929190620001d1565b508051620000a0906004906020840190620001d1565b505050620000b53383620000ea60201b60201c565b60068054336001600160a01b031991821617909155600580549091166001600160a01b03929092169190911790555062000356565b6001600160a01b0382166200011c5760405162461bcd60e51b81526004016200011390620002b4565b60405180910390fd5b6200012a60008383620001cc565b80600260008282546200013e9190620002f4565b90915550506001600160a01b038216600090815260208190526040812080548392906200016d908490620002f4565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001b2908590620002eb565b60405180910390a3620001c860008383620001cc565b5050565b505050565b828054620001df9062000319565b90600052602060002090601f0160209004810192826200020357600085556200024e565b82601f106200021e57805160ff19168380011785556200024e565b828001600101855582156200024e579182015b828111156200024e57825182559160200191906001019062000231565b506200025c92915062000260565b5090565b5b808211156200025c576000815560010162000261565b600080604083850312156200028a578182fd5b825160208401519092506001600160a01b0381168114620002a9578182fd5b809150509250929050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200031457634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200032e57607f821691505b602082108114156200035057634e487b7160e01b600052602260045260246000fd5b50919050565b6112cb80620003666000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806340c10f19116100a25780639dc29fac116100715780639dc29fac14610227578063a457c2d71461023a578063a9059cbb1461024d578063dd62ed3e14610260578063ecb427951461027357610116565b806340c10f19146101e457806370a08231146101f75780638da5cb5b1461020a57806395d89b411461021f57610116565b806313af4035116100e957806313af40351461018157806318160ddd1461019457806323b872dd146101a9578063313ce567146101bc57806339509351146101d157610116565b806301eab5991461011b578063045d03891461013057806306fdde0314610143578063095ea7b314610161575b600080fd5b61012e610129366004610c3d565b61027b565b005b61012e61013e366004610cc4565b6102d0565b61014b61033c565b6040516101589190610d6c565b60405180910390f35b61017461016f366004610cc4565b6103ce565b6040516101589190610d61565b61012e61018f366004610c3d565b6103f0565b61019c61043c565b60405161015891906111d2565b6101746101b7366004610c89565b610442565b6101c4610472565b60405161015891906111db565b6101746101df366004610cc4565b610477565b61012e6101f2366004610cc4565b6104c3565b61019c610205366004610c3d565b610513565b610212610532565b6040516101589190610d29565b61014b610541565b61012e610235366004610cc4565b610550565b610174610248366004610cc4565b610582565b61017461025b366004610cc4565b6105ee565b61019c61026e366004610c57565b610606565b610212610631565b6006546001600160a01b031633146102ae5760405162461bcd60e51b81526004016102a590610f52565b60405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0382166102f65760405162461bcd60e51b81526004016102a59061112d565b600081116103165760405162461bcd60e51b81526004016102a590610f9c565b60055461032e906001600160a01b0316333084610640565b610338828261069e565b5050565b60606003805461034b90611244565b80601f016020809104026020016040519081016040528092919081815260200182805461037790611244565b80156103c45780601f10610399576101008083540402835291602001916103c4565b820191906000526020600020905b8154815290600101906020018083116103a757829003601f168201915b5050505050905090565b6000806103d9610766565b90506103e681858561076a565b5060019392505050565b6006546001600160a01b0316331461041a5760405162461bcd60e51b81526004016102a590610f52565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60025490565b60008061044d610766565b905061045a85828561081e565b610465858585610862565b60019150505b9392505050565b601290565b600080610482610766565b6001600160a01b038082166000908152600160209081526040808320938916835292905220549091506103e690829086906104be9087906111e9565b61076a565b6006546001600160a01b031633146104ed5760405162461bcd60e51b81526004016102a590611088565b6001600160a01b03821661032e5760405162461bcd60e51b81526004016102a590610f29565b6001600160a01b0381166000908152602081905260409020545b919050565b6006546001600160a01b031681565b60606004805461034b90611244565b6001600160a01b03821633146105785760405162461bcd60e51b81526004016102a590610f78565b6103388282610986565b60008061058d610766565b6001600160a01b03808216600090815260016020908152604080832093891683529290522054909150838110156105d65760405162461bcd60e51b81526004016102a590611156565b6105e3828686840361076a565b506001949350505050565b6000806105f9610766565b90506103e6818585610862565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b031681565b610698846323b872dd60e01b85858560405160240161066193929190610d3d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a78565b50505050565b6001600160a01b0382166106c45760405162461bcd60e51b81526004016102a59061119b565b6106d060008383610a73565b80600260008282546106e291906111e9565b90915550506001600160a01b0382166000908152602081905260408120805483929061070f9084906111e9565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107529085906111d2565b60405180910390a361033860008383610a73565b3390565b6001600160a01b0383166107905760405162461bcd60e51b81526004016102a590611044565b6001600160a01b0382166107b65760405162461bcd60e51b81526004016102a590610e24565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108119085906111d2565b60405180910390a3505050565b600061082a8484610606565b9050600019811461069857818110156108555760405162461bcd60e51b81526004016102a590610e66565b610698848484840361076a565b6001600160a01b0383166108885760405162461bcd60e51b81526004016102a590610fff565b6001600160a01b0382166108ae5760405162461bcd60e51b81526004016102a590610d9f565b6108b9838383610a73565b6001600160a01b038316600090815260208190526040902054818110156108f25760405162461bcd60e51b81526004016102a590610e9d565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109299084906111e9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161097391906111d2565b60405180910390a3610698848484610a73565b6001600160a01b0382166109ac5760405162461bcd60e51b81526004016102a590610fbe565b6109b882600083610a73565b6001600160a01b038216600090815260208190526040902054818110156109f15760405162461bcd60e51b81526004016102a590610de2565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a20908490611201565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a639086906111d2565b60405180910390a3610a73836000845b505050565b6000610acd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b079092919063ffffffff16565b805190915015610a735780806020019051810190610aeb9190610ced565b610a735760405162461bcd60e51b81526004016102a5906110e3565b6060610b168484600085610b1e565b949350505050565b606082471015610b405760405162461bcd60e51b81526004016102a590610ee3565b610b4985610bde565b610b655760405162461bcd60e51b81526004016102a5906110ac565b600080866001600160a01b03168587604051610b819190610d0d565b60006040518083038185875af1925050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bc3565b606091505b5091509150610bd3828286610bed565b979650505050505050565b6001600160a01b03163b151590565b60608315610bfc57508161046b565b825115610c0c5782518084602001fd5b8160405162461bcd60e51b81526004016102a59190610d6c565b80356001600160a01b038116811461052d57600080fd5b600060208284031215610c4e578081fd5b61046b82610c26565b60008060408385031215610c69578081fd5b610c7283610c26565b9150610c8060208401610c26565b90509250929050565b600080600060608486031215610c9d578081fd5b610ca684610c26565b9250610cb460208501610c26565b9150604084013590509250925092565b60008060408385031215610cd6578182fd5b610cdf83610c26565b946020939093013593505050565b600060208284031215610cfe578081fd5b8151801515811461046b578182fd5b60008251610d1f818460208701611218565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b6000602082528251806020840152610d8b816040850160208701611218565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252600f908201526e61646472657373206973207a65726f60881b604082015260600190565b6020808252600c908201526b31b430b733b29032b93937b960a11b604082015260600190565b6020808252600a9082015269313ab9371032b93937b960b11b604082015260600190565b6020808252600890820152670616d6f756e7420360c41b604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252600a908201526936b4b73a1032b93937b960b11b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252600f908201526e6163636f756e74206973207a65726f60881b604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156111fc576111fc61127f565b500190565b6000828210156112135761121361127f565b500390565b60005b8381101561123357818101518382015260200161121b565b838111156106985750506000910152565b60028104600182168061125857607f821691505b6020821081141561127957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e231e0055083aab1c40a461217573b1d88527bfc84a3b2c332a8423c19dd3c9d64736f6c63430008010033";

type GlodTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlodTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GlodToken__factory extends ContractFactory {
  constructor(...args: GlodTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GlodToken";
  }

  deploy(
    amount: BigNumberish,
    manaAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GlodToken> {
    return super.deploy(
      amount,
      manaAddr,
      overrides || {}
    ) as Promise<GlodToken>;
  }
  getDeployTransaction(
    amount: BigNumberish,
    manaAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(amount, manaAddr, overrides || {});
  }
  attach(address: string): GlodToken {
    return super.attach(address) as GlodToken;
  }
  connect(signer: Signer): GlodToken__factory {
    return super.connect(signer) as GlodToken__factory;
  }
  static readonly contractName: "GlodToken";
  public readonly contractName: "GlodToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlodTokenInterface {
    return new utils.Interface(_abi) as GlodTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlodToken {
    return new Contract(address, _abi, signerOrProvider) as GlodToken;
  }
}
