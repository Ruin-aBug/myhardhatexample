/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20USDT, ERC20USDTInterface } from "../ERC20USDT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006200001e6200013b565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152600a8082526915195d1a195c881554d160b21b60209092019182526200009b916006916200013f565b50604080518082019091526004808252631554d11560e21b6020909201918252620000c9916005916200013f565b506004805460ff191660121790556a18d0bf423c03d8de00000060038190553360008181526001602052604080822084905551919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916200012d91620001e5565b60405180910390a36200022b565b3390565b8280546200014d90620001ee565b90600052602060002090601f016020900481019282620001715760008555620001bc565b82601f106200018c57805160ff1916838001178555620001bc565b82800160010185558215620001bc579182015b82811115620001bc5782518255916020019190600101906200019f565b50620001ca929150620001ce565b5090565b5b80821115620001ca5760008155600101620001cf565b90815260200190565b6002810460018216806200020357607f821691505b602082108114156200022557634e487b7160e01b600052602260045260246000fd5b50919050565b61103c806200023b6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb14610242578063b09f126614610255578063d28d88521461025d578063dd62ed3e14610265578063f2fde38b146102785761012c565b8063893d20e8146101f75780638da5cb5b1461020c57806395d89b4114610214578063a0712d681461021c578063a457c2d71461022f5761012c565b806332424aa3116100f457806332424aa3146101ac57806339509351146101b457806342966c68146101c757806370a08231146101da578063715018a6146101ed5761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461016f57806323b872dd14610184578063313ce56714610197575b600080fd5b61013961028b565b6040516101469190610c4f565b60405180910390f35b61016261015d366004610bef565b61031d565b6040516101469190610c44565b61017761033a565b6040516101469190610eda565b610162610192366004610bb4565b610340565b61019f6103c7565b6040516101469190610ee3565b61019f6103d0565b6101626101c2366004610bef565b6103d9565b6101626101d5366004610c18565b610427565b6101776101e8366004610b68565b610443565b6101f561045e565b005b6101ff6104e6565b6040516101469190610c30565b6101ff6104f5565b610139610504565b61016261022a366004610c18565b610513565b61016261023d366004610bef565b61055b565b610162610250366004610bef565b6105c3565b6101396105d7565b610139610665565b610177610273366004610b82565b610672565b6101f5610286366004610b68565b61069d565b60606006805461029a90610f20565b80601f01602080910402602001604051908101604052809291908181526020018280546102c690610f20565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b600061033161032a6106de565b84846106e2565b50600192915050565b60035490565b600061034d848484610796565b6103bd846103596106de565b6103b885604051806060016040528060288152602001610fba602891396001600160a01b038a166000908152600260205260408120906103976106de565b6001600160a01b0316815260208101919091526040016000205491906108a0565b6106e2565b5060019392505050565b60045460ff1690565b60045460ff1681565b60006103316103e66106de565b846103b885600260006103f76106de565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906108da565b600061043a6104346106de565b83610910565b5060015b919050565b6001600160a01b031660009081526001602052604090205490565b6104666106de565b6000546001600160a01b0390811691161461049c5760405162461bcd60e51b815260040161049390610da4565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006104f06104f5565b905090565b6000546001600160a01b031690565b60606005805461029a90610f20565b600061051d6106de565b6000546001600160a01b0390811691161461054a5760405162461bcd60e51b815260040161049390610da4565b61043a6105556106de565b836109e6565b60006103316105686106de565b846103b885604051806060016040528060258152602001610fe260259139600260006105926106de565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906108a0565b60006103316105d06106de565b8484610796565b600580546105e490610f20565b80601f016020809104026020016040519081016040528092919081815260200182805461061090610f20565b801561065d5780601f106106325761010080835404028352916020019161065d565b820191906000526020600020905b81548152906001019060200180831161064057829003601f168201915b505050505081565b600680546105e490610f20565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6106a56106de565b6000546001600160a01b039081169116146106d25760405162461bcd60e51b815260040161049390610da4565b6106db81610a8e565b50565b3390565b6001600160a01b0383166107085760405162461bcd60e51b815260040161049390610e5f565b6001600160a01b03821661072e5760405162461bcd60e51b815260040161049390610d2b565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610789908590610eda565b60405180910390a3505050565b6001600160a01b0383166107bc5760405162461bcd60e51b815260040161049390610e1a565b6001600160a01b0382166107e25760405162461bcd60e51b815260040161049390610ca2565b61081f81604051806060016040528060268152602001610f94602691396001600160a01b03861660009081526001602052604090205491906108a0565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461084e90826108da565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610789908590610eda565b600081848411156108c45760405162461bcd60e51b81526004016104939190610c4f565b5060006108d18486610f09565b95945050505050565b6000806108e78385610ef1565b9050838110156109095760405162461bcd60e51b815260040161049390610d6d565b9392505050565b6001600160a01b0382166109365760405162461bcd60e51b815260040161049390610dd9565b61097381604051806060016040528060228152602001610f72602291396001600160a01b03851660009081526001602052604090205491906108a0565b6001600160a01b0383166000908152600160205260409020556003546109999082610b0f565b6003556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109da908590610eda565b60405180910390a35050565b6001600160a01b038216610a0c5760405162461bcd60e51b815260040161049390610ea3565b600354610a1990826108da565b6003556001600160a01b038216600090815260016020526040902054610a3f90826108da565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109da908590610eda565b6001600160a01b038116610ab45760405162461bcd60e51b815260040161049390610ce5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061090983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108a0565b80356001600160a01b038116811461043e57600080fd5b600060208284031215610b79578081fd5b61090982610b51565b60008060408385031215610b94578081fd5b610b9d83610b51565b9150610bab60208401610b51565b90509250929050565b600080600060608486031215610bc8578081fd5b610bd184610b51565b9250610bdf60208501610b51565b9150604084013590509250925092565b60008060408385031215610c01578182fd5b610c0a83610b51565b946020939093013593505050565b600060208284031215610c29578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610c7b57858101830151858201604001528201610c5f565b81811115610c8c5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610f0457610f04610f5b565b500190565b600082821015610f1b57610f1b610f5b565b500390565b600281046001821680610f3457607f821691505b60208210811415610f5557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d376b2816361b927a019e4c0642cb4b17a91e143088dfcafd409a101959d964c64736f6c63430008010033";

type ERC20USDTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20USDTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20USDT__factory extends ContractFactory {
  constructor(...args: ERC20USDTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20USDT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20USDT> {
    return super.deploy(overrides || {}) as Promise<ERC20USDT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20USDT {
    return super.attach(address) as ERC20USDT;
  }
  connect(signer: Signer): ERC20USDT__factory {
    return super.connect(signer) as ERC20USDT__factory;
  }
  static readonly contractName: "ERC20USDT";
  public readonly contractName: "ERC20USDT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20USDTInterface {
    return new utils.Interface(_abi) as ERC20USDTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20USDT {
    return new Contract(address, _abi, signerOrProvider) as ERC20USDT;
  }
}
